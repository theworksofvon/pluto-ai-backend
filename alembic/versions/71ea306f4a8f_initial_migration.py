"""Initial migration

Revision ID: 71ea306f4a8f
Revises:
Create Date: 2025-03-09 12:23:06.294292

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "71ea306f4a8f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "teams",
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("team_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "games",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("home_team_id", sa.Integer(), nullable=True),
        sa.Column("away_team_id", sa.Integer(), nullable=True),
        sa.Column("winner_team_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["away_team_id"],
            ["teams.team_id"],
        ),
        sa.ForeignKeyConstraint(
            ["home_team_id"],
            ["teams.team_id"],
        ),
        sa.ForeignKeyConstraint(
            ["winner_team_id"],
            ["teams.team_id"],
        ),
        sa.PrimaryKeyConstraint("game_id"),
    )
    op.create_table(
        "players",
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.team_id"],
        ),
        sa.PrimaryKeyConstraint("player_id"),
    )
    op.create_table(
        "player_game_stats",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("points", sa.Integer(), nullable=True),
        sa.Column("assists", sa.Integer(), nullable=True),
        sa.Column("rebounds", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.game_id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.player_id"],
        ),
        sa.PrimaryKeyConstraint("game_id", "player_id"),
    )
    op.create_table(
        "predictions",
        sa.Column("prediction_id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.Column("predicted_winner_team_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.game_id"],
        ),
        sa.ForeignKeyConstraint(
            ["predicted_winner_team_id"],
            ["teams.team_id"],
        ),
        sa.PrimaryKeyConstraint("prediction_id"),
    )
    op.create_table(
        "player_stats_predictions",
        sa.Column("prediction_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("predicted_points", sa.Float(), nullable=True),
        sa.Column("predicted_assists", sa.Float(), nullable=True),
        sa.Column("predicted_rebounds", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.player_id"],
        ),
        sa.ForeignKeyConstraint(
            ["prediction_id"],
            ["predictions.prediction_id"],
        ),
        sa.PrimaryKeyConstraint("prediction_id", "player_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("player_stats_predictions")
    op.drop_table("predictions")
    op.drop_table("player_game_stats")
    op.drop_table("players")
    op.drop_table("games")
    op.drop_table("teams")
    # ### end Alembic commands ###
